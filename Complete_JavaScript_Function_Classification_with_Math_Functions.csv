Function,Type,Reason,Syntax,Example,Use Case
map,Higher-Order,Takes a function as an argument to transform each element,array.map(callbackFn),"[1, 2, 3].map(x => x * 2) // [2, 4, 6]",Use when you want to transform each element in an array.
filter,Higher-Order,Takes a function as an argument to filter elements,array.filter(callbackFn),"[1, 2, 3, 4].filter(x => x % 2 === 0) // [2, 4]",Use to filter out elements based on a condition.
reduce,Higher-Order,Takes a function as an argument to accumulate values,"array.reduce(callbackFn, initialValue)","[1, 2, 3, 4].reduce((a, b) => a + b, 0) // 10","Use to accumulate values into a single result (e.g., sum, product)."
forEach,Higher-Order,Takes a function as an argument to perform side-effects on each element,array.forEach(callbackFn),"[1, 2, 3].forEach(x => console.log(x)) // Logs 1, 2, 3","Use to perform an action on each element (e.g., logging), without returning a new array."
find,Higher-Order,Takes a function as an argument to find the first matching element,array.find(callbackFn),"[1, 2, 3, 4].find(x => x > 2) // 3",Use to find the first element that meets a specific condition.
findIndex,Higher-Order,Takes a function as an argument to find the index of the first matching element,array.findIndex(callbackFn),"[1, 2, 3, 4].findIndex(x => x > 2) // 2",Use to find the index of the first element that meets a specific condition.
every,Higher-Order,Takes a function as an argument to test all elements,array.every(callbackFn),"[2, 4, 6].every(x => x % 2 === 0) // true",Use to check if all elements satisfy a condition.
some,Higher-Order,Takes a function as an argument to test if any element meets criteria,array.some(callbackFn),"[1, 3, 5, 6].some(x => x % 2 === 0) // true",Use to check if any element in an array satisfies a condition.
sort,Higher-Order,Can take a comparator function as an argument to specify sorting order,array.sort([compareFn]),"[3, 1, 4].sort((a, b) => a - b) // [1, 3, 4]","Use to sort elements in a custom order, often numerically or alphabetically."
flatMap,Higher-Order,Takes a function to transform elements and then flattens the result,array.flatMap(callbackFn),"[1, 2, 3].flatMap(x => [x, x * 2]) // [1, 2, 2, 4, 3, 6]",Use to transform elements and then flatten the result into a single array.
bind,Higher-Order,Returns a new function with `this` bound to specified object,"function.bind(thisArg, ...args)","const boundFunc = func.bind(obj, 'arg1'); boundFunc()","Use to create a new function with `this` bound to a specific context, especially for event handlers."
call,Higher-Order,Calls a function with specified `this` and arguments (in list format),"function.call(thisArg, ...args)","func.call(obj, 'arg1', 'arg2')",Use to immediately invoke a function with a specific `this` context and arguments.
apply,Higher-Order,Calls a function with specified `this` and arguments (in array format),"function.apply(thisArg, [argsArray])","func.apply(obj, ['arg1', 'arg2'])",Use to immediately invoke a function with a specific `this` context and arguments in an array format.
reverse,Non-Higher-Order,Does not take a function as an argument or return a function,array.reverse(),"[1, 2, 3].reverse() // [3, 2, 1]",Use to reverse the order of elements in an array.
push,Non-Higher-Order,Does not take a function as an argument or return a function,"array.push(element1, ..., elementN)","[1, 2, 3].push(4) // [1, 2, 3, 4]",Use to add one or more elements to the end of an array.
pop,Non-Higher-Order,Does not take a function as an argument or return a function,array.pop(),"[1, 2, 3].pop() // [1, 2]",Use to remove the last element from an array.
shift,Non-Higher-Order,Does not take a function as an argument or return a function,array.shift(),"[1, 2, 3].shift() // [2, 3]",Use to remove the first element from an array.
unshift,Non-Higher-Order,Does not take a function as an argument or return a function,"array.unshift(element1, ..., elementN)","[1, 2, 3].unshift(0) // [0, 1, 2, 3]",Use to add one or more elements to the beginning of an array.
concat,Non-Higher-Order,Does not take a function as an argument or return a function,"array.concat(array1, ..., arrayN)","[1, 2].concat([3, 4]) // [1, 2, 3, 4]",Use to combine two or more arrays into a new array.
slice,Non-Higher-Order,Does not take a function as an argument or return a function,"array.slice([begin[, end]])","[1, 2, 3].slice(0, 2) // [1, 2]",Use to extract a section of an array as a new array without modifying the original.
Math.abs,Basic,Returns the absolute value of a number,Math.abs(x),Math.abs(-5) // 5,Get the absolute value of a number
Math.pow,Basic,Returns base raised to the exponent,"Math.pow(x, y)","Math.pow(2, 3) // 8",Calculate a number raised to a power
Math.sqrt,Basic,Returns the square root of a number,Math.sqrt(x),Math.sqrt(16) // 4,Get the square root of a number
Math.round,Rounding,Rounds a number to the nearest integer,Math.round(x),Math.round(4.5) // 5,Round a number to the nearest integer
Math.min,Min/Max,Returns the smallest number from a list of arguments,"Math.min(a, b, ...)","Math.min(3, 1, 4) // 1",Get the smallest number in a list
Math.max,Min/Max,Returns the largest number from a list of arguments,"Math.max(a, b, ...)","Math.max(3, 1, 4) // 4",Get the largest number in a list
Math.random,Random,Returns a random number between 0 (inclusive) and 1 (exclusive),Math.random(),Math.random() // 0.539,Generate a random number between 0 and 1
Math.PI,Constant,Returns the value of π (pi),Math.PI,Math.PI // 3.14159...,Get the value of π
Math.abs,Basic,Returns the absolute value of a number,Math.abs(x),Math.abs(-5) // 5,Get the absolute value of a number
Math.pow,Basic,Returns base raised to the exponent,"Math.pow(x, y)","Math.pow(2, 3) // 8",Calculate a number raised to a power
Math.sqrt,Basic,Returns the square root of a number,Math.sqrt(x),Math.sqrt(16) // 4,Get the square root of a number
Math.cbrt,Basic,Returns the cube root of a number,Math.cbrt(x),Math.cbrt(27) // 3,Get the cube root of a number
Math.exp,Exponential,Returns e raised to a power,Math.exp(x),Math.exp(1) // 2.718,Calculate e raised to a power
Math.log,Logarithmic,Returns the natural logarithm of a number,Math.log(x),Math.log(10) // 2.302,Get the natural logarithm of a number
Math.log10,Logarithmic,Returns the base 10 logarithm of a number,Math.log10(x),Math.log10(100) // 2,Get the base 10 logarithm of a number
Math.log2,Logarithmic,Returns the base 2 logarithm of a number,Math.log2(x),Math.log2(8) // 3,Get the base 2 logarithm of a number
Math.round,Rounding,Rounds a number to the nearest integer,Math.round(x),Math.round(4.5) // 5,Round a number to the nearest integer
Math.ceil,Rounding,Rounds a number up to the next largest integer,Math.ceil(x),Math.ceil(4.2) // 5,Round a number up to the next largest integer
Math.floor,Rounding,Rounds a number down to the next smallest integer,Math.floor(x),Math.floor(4.8) // 4,Round a number down to the next smallest integer
Math.trunc,Rounding,"Returns the integer part of a number, removing decimals",Math.trunc(x),Math.trunc(4.9) // 4,"Get the integer part of a number, removing decimals"
Math.min,Min/Max,Returns the smallest number from a list of arguments,"Math.min(a, b, ...)","Math.min(3, 1, 4) // 1",Get the smallest number in a list
Math.max,Min/Max,Returns the largest number from a list of arguments,"Math.max(a, b, ...)","Math.max(3, 1, 4) // 4",Get the largest number in a list
Math.sin,Trigonometric,Returns the sine of a value in radians,Math.sin(x),Math.sin(Math.PI / 2) // 1,Get the sine of a value in radians
Math.cos,Trigonometric,Returns the cosine of a value in radians,Math.cos(x),Math.cos(Math.PI) // -1,Get the cosine of a value in radians
Math.tan,Trigonometric,Returns the tangent of a value in radians,Math.tan(x),Math.tan(Math.PI / 4) // 1,Get the tangent of a value in radians
Math.asin,Trigonometric,Returns the arcsine (inverse sine) of a value,Math.asin(x),Math.asin(1) // 1.57,Get the arcsine (inverse sine) of a value
Math.acos,Trigonometric,Returns the arccosine (inverse cosine) of a value,Math.acos(x),Math.acos(1) // 0,Get the arccosine (inverse cosine) of a value
Math.atan,Trigonometric,Returns the arctangent (inverse tangent) of a value,Math.atan(x),Math.atan(1) // 0.785,Get the arctangent (inverse tangent) of a value
Math.atan2,Trigonometric,Returns the arctangent of y/x considering quadrant,"Math.atan2(y, x)","Math.atan2(1, 1) // 0.785",Get the arctangent of y/x considering quadrant
Math.sinh,Hyperbolic,Returns the hyperbolic sine of a value,Math.sinh(x),Math.sinh(1) // 1.175,Get the hyperbolic sine of a value
Math.cosh,Hyperbolic,Returns the hyperbolic cosine of a value,Math.cosh(x),Math.cosh(1) // 1.543,Get the hyperbolic cosine of a value
Math.tanh,Hyperbolic,Returns the hyperbolic tangent of a value,Math.tanh(x),Math.tanh(1) // 0.761,Get the hyperbolic tangent of a value
Math.asinh,Hyperbolic,Returns the hyperbolic arcsine of a value,Math.asinh(x),Math.asinh(1) // 0.881,Get the hyperbolic arcsine of a value
Math.acosh,Hyperbolic,Returns the hyperbolic arccosine of a value,Math.acosh(x),Math.acosh(2) // 1.317,Get the hyperbolic arccosine of a value
Math.atanh,Hyperbolic,Returns the hyperbolic arctangent of a value,Math.atanh(x),Math.atanh(0.5) // 0.549,Get the hyperbolic arctangent of a value
Math.random,Random,Returns a random number between 0 (inclusive) and 1 (exclusive),Math.random(),"Math.random() // e.g., 0.539",Generate a random number between 0 and 1
Math.PI,Constant,Returns the value of π (pi),Math.PI,Math.PI // 3.14159...,Get the value of π
Math.E,Constant,Returns the value of Euler's number e,Math.E,Math.E // 2.718,Get the value of Euler's number e